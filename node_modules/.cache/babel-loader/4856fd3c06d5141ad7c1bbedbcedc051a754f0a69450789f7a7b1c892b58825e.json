{"ast":null,"code":"var _jsxFileName = \"/home/ma3ter3ky/React learning/to-do/src/components/Menu.js\";\nimport React from 'react';\nimport TaskList from './TaskList';\nimport NewTaskButton from './NewTaskButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Menu extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: new Map([['1', {\n        name: 'Task 1',\n        completed: false\n      }], ['2', {\n        name: 'Task 2',\n        completed: false\n      }], ['3', {\n        name: 'Task 3',\n        completed: false\n      }]]),\n      newTaskId: 4\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu\",\n      children: [/*#__PURE__*/_jsxDEV(NewTaskButton, {\n        addNewTask: this.addNewTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        tasks: this.state.tasks,\n        deleteTask: this.deleteTask,\n        completeTask: this.completeTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this);\n  }\n  deleteTask(id) {\n    this.setState({\n      tasks: this.state.tasks.delete(id)\n    });\n  }\n  completeTask(id) {\n    this.setState(prevState => {\n      const updatedTasks = new Map(prevState.tasks);\n      const task = prevState.tasks.get(id);\n      return {\n        tasks: prevState.tasks.set(id, {\n          ...task,\n          completed: !task.completed\n        })\n      };\n    });\n  }\n  addNewTask(taskName) {\n    const newTaskIdStr = this.state.newTaskId.toString();\n    this.setState({\n      tasks: this.state.tasks.set(newTaskIdStr, {\n        name: taskName,\n        completed: false\n      }),\n      newTaskId: this.state.newTaskId + 1\n    });\n  }\n}\nexport default Menu;","map":{"version":3,"names":["React","TaskList","NewTaskButton","jsxDEV","_jsxDEV","Menu","Component","constructor","props","state","tasks","Map","name","completed","newTaskId","render","className","children","addNewTask","fileName","_jsxFileName","lineNumber","columnNumber","deleteTask","completeTask","id","setState","delete","prevState","updatedTasks","task","get","set","taskName","newTaskIdStr","toString"],"sources":["/home/ma3ter3ky/React learning/to-do/src/components/Menu.js"],"sourcesContent":["import React from 'react';\nimport TaskList from './TaskList';\nimport NewTaskButton from './NewTaskButton';\n\nclass Menu extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            tasks: new Map([\n                ['1', {name: 'Task 1', completed: false}],\n                ['2', {name: 'Task 2', completed: false}],\n                ['3', {name: 'Task 3', completed: false}]\n            ]),\n            newTaskId: 4,\n        }\n    }\n    render() {\n        return (\n            <div className=\"menu\">\n                <NewTaskButton addNewTask={this.addNewTask}/>\n                <TaskList tasks={this.state.tasks} deleteTask={this.deleteTask} completeTask={this.completeTask}/>\n            </div>\n        );\n    }\n\n    deleteTask(id){\n        this.setState({\n            tasks: this.state.tasks.delete(id),\n        });\n    }\n\n    completeTask(id){\n        this.setState(prevState => {\n            const updatedTasks = new Map(prevState.tasks);\n            const task = prevState.tasks.get(id);\n            return {\n                tasks: prevState.tasks.set(id, {...task, completed: !task.completed}),\n            };\n        });\n    }\nc\n    addNewTask(taskName){\n        const newTaskIdStr = this.state.newTaskId.toString();\n        this.setState({\n            tasks: this.state.tasks.set(newTaskIdStr, {name: taskName, completed: false}),\n            newTaskId: this.state.newTaskId + 1,\n        });\n    }\n}\n\nexport default Menu;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,IAAI,SAASL,KAAK,CAACM,SAAS,CAAC;EAC/BC,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IAEZ,IAAI,CAACC,KAAK,GAAG;MACTC,KAAK,EAAE,IAAIC,GAAG,CAAC,CACX,CAAC,GAAG,EAAE;QAACC,IAAI,EAAE,QAAQ;QAAEC,SAAS,EAAE;MAAK,CAAC,CAAC,EACzC,CAAC,GAAG,EAAE;QAACD,IAAI,EAAE,QAAQ;QAAEC,SAAS,EAAE;MAAK,CAAC,CAAC,EACzC,CAAC,GAAG,EAAE;QAACD,IAAI,EAAE,QAAQ;QAAEC,SAAS,EAAE;MAAK,CAAC,CAAC,CAC5C,CAAC;MACFC,SAAS,EAAE;IACf,CAAC;EACL;EACAC,MAAMA,CAAA,EAAG;IACL,oBACIX,OAAA;MAAKY,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACjBb,OAAA,CAACF,aAAa;QAACgB,UAAU,EAAE,IAAI,CAACA;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC7ClB,OAAA,CAACH,QAAQ;QAACS,KAAK,EAAE,IAAI,CAACD,KAAK,CAACC,KAAM;QAACa,UAAU,EAAE,IAAI,CAACA,UAAW;QAACC,YAAY,EAAE,IAAI,CAACA;MAAa;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjG,CAAC;EAEd;EAEAC,UAAUA,CAACE,EAAE,EAAC;IACV,IAAI,CAACC,QAAQ,CAAC;MACVhB,KAAK,EAAE,IAAI,CAACD,KAAK,CAACC,KAAK,CAACiB,MAAM,CAACF,EAAE;IACrC,CAAC,CAAC;EACN;EAEAD,YAAYA,CAACC,EAAE,EAAC;IACZ,IAAI,CAACC,QAAQ,CAACE,SAAS,IAAI;MACvB,MAAMC,YAAY,GAAG,IAAIlB,GAAG,CAACiB,SAAS,CAAClB,KAAK,CAAC;MAC7C,MAAMoB,IAAI,GAAGF,SAAS,CAAClB,KAAK,CAACqB,GAAG,CAACN,EAAE,CAAC;MACpC,OAAO;QACHf,KAAK,EAAEkB,SAAS,CAAClB,KAAK,CAACsB,GAAG,CAACP,EAAE,EAAE;UAAC,GAAGK,IAAI;UAAEjB,SAAS,EAAE,CAACiB,IAAI,CAACjB;QAAS,CAAC;MACxE,CAAC;IACL,CAAC,CAAC;EACN;EAEAK,UAAUA,CAACe,QAAQ,EAAC;IAChB,MAAMC,YAAY,GAAG,IAAI,CAACzB,KAAK,CAACK,SAAS,CAACqB,QAAQ,CAAC,CAAC;IACpD,IAAI,CAACT,QAAQ,CAAC;MACVhB,KAAK,EAAE,IAAI,CAACD,KAAK,CAACC,KAAK,CAACsB,GAAG,CAACE,YAAY,EAAE;QAACtB,IAAI,EAAEqB,QAAQ;QAAEpB,SAAS,EAAE;MAAK,CAAC,CAAC;MAC7EC,SAAS,EAAE,IAAI,CAACL,KAAK,CAACK,SAAS,GAAG;IACtC,CAAC,CAAC;EACN;AACJ;AAEA,eAAeT,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}